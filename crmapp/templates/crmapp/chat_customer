I can help you with creating a customer support chat frontend using semantic ui and jquery. Here are some steps you can follow:

- First, you need to create two html pages, one for the customers and one for the agents. You can use semantic ui's grid system to layout the pages and add some basic elements like headers, buttons, inputs, etc. You can also use semantic ui's icons and colors to make the pages look more attractive.
- Second, you need to add some jquery code to handle the chat functionality. You can use semantic ui's comment component to display the messages and semantic ui's form component to send messages. You can also use semantic ui's modal component to show a login screen for the agents. You can use firebase as your backend to store and retrieve the messages and the user information. You can use firebase's authentication service to sign in the agents and firebase's realtime database service to sync the messages across the pages.
- Third, you need to style and customize the chat frontend according to your preferences. You can use semantic ui's theming system to change the variables and override the default styles. You can also use semantic ui's transitions and animations to add some effects to the chat frontend.

Here is some sample code for the customer page:

```html
<html>
<head>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.4.1/semantic.min.css">
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <script src="https://www.gstatic.com/firebasejs/9.6.1/firebase-app.js"></script>
  <script src="https://www.gstatic.com/firebasejs/9.6.1/firebase-auth.js"></script>
  <script src="https://www.gstatic.com/firebasejs/9.6.1/firebase-database.js"></script>
</head>
<body>
  <div class="ui container">
    <div class="ui grid">
      <div class="sixteen wide column">
        <h1 class="ui header">Customer Support Chat</h1>
      </div>
      <div class="twelve wide column">
        <div class="ui comments" id="messages">
          <!-- messages will be appended here -->
        </div>
      </div>
      <div class="four wide column">
        <div class="ui segment">
          <h3 class="ui header">Need help?</h3>
          <p>Our agents are ready to assist you.</p>
          <button class="ui primary button" id="start-chat">Start Chat</button>
        </div>
      </div>
    </div>
    <div class="ui small modal" id="chat-form">
      <i class="close icon"></i>
      <div class="header">Chat with an agent</div>
      <div class="content">
        <form class="ui form">
          <div class="field">
            <label>Name</label>
            <input type="text" id="name-input" placeholder="Enter your name">
          </div>
          <div class="field">
            <label>Message</label>
            <textarea id="message-input" placeholder="Enter your message"></textarea>
          </div>
          <button class="ui blue button" id="send-button" type="submit">Send</button>
        </form>
      </div>
    </div>
  </div>

  <script>

    // Initialize Firebase
    const firebaseConfig = {
      // your firebase config here
    };

    const app = firebase.initializeApp(firebaseConfig);
    const auth = firebase.auth(app);
    const db = firebase.database(app);

    // Get DOM elements
    const startChatButton = $("#start-chat");
    const chatFormModal = $("#chat-form");
    const nameInput = $("#name-input");
    const messageInput = $("#message-input");
    const sendButton = $("#send-button");
    const messagesDiv = $("#messages");

    // Global variables
    let customerName = "";
    let agentId = "";
    let chatId = "";

    // Start chat button click handler
    startChatButton.click(function() {
      // Show the chat form modal
      chatFormModal.modal("show");
    });

    // Send button click handler
    sendButton.click(function(event) {
      event.preventDefault();
      // Get the name and message from the inputs
      customerName = nameInput.val().trim();
      let messageText
